name: CI Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports: [5432:5432]
        env:
          POSTGRES_DB: issues_tracker
          POSTGRES_USER: rolika
          POSTGRES_PASSWORD: rolika1234
        options: >-
          --health-cmd="pg_isready -U rolika"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SQLALCHEMY_DATABASE_URL: ${{ secrets.SQLALCHEMY_DATABASE_URL }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      # FRONTEND
      - name: 🧪 Lint & test frontend
        working-directory: frontend
        run: |
          npm ci
          npm run lint || true
          npm run test || echo "No frontend tests defined"

      # BACKEND SETUP WITH POETRY
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: 📦 Install backend dependencies via Poetry
        working-directory: backend
        run: |
          poetry install

      - name: 🧪 Run backend tests via Poetry
        working-directory: backend
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q

      # DOCKER BUILD
      - name: 🐳 Build Docker images
        run: |
          docker build -t backend-app ./backend
          docker build -t frontend-app ./frontend

      
